version: '3.8'
services:

  # 
  # Microservices
  # 

  ms-authenticate:
    build: ms-authenticate
    environment:
      - PORT=5000
      - MONGO_URL=mongodb://ms-user-db:27017/ms_user_db
    ports:
      - "9000:5000" # Expose port 8000 on the host, maps to port 5000 inside the container
    volumes:
      - ./ms-authenticate/app:/code/app # Map the host app directory to the container - direct reloads TODO create a seperate dev compose? when setup done
    depends_on:
      - ms-user-db
    networks:
      - ms-net
      
  ms-user:
    build: ms-user
    environment:
      - PORT=5002
      - MONGO_URL=mongodb://ms-user-db:27017/ms_user_db
    ports:
      - "9002:5002" # Expose port 8000 on the host, maps to port 5000 inside the container
    volumes:
      - ./ms-user/app:/code/app # Map the host app directory to the container - direct reloads TODO create a seperate dev compose? when setup done
    depends_on:
      - ms-user-db
    networks:
      - ms-net

  ms-post:
    build: ms-post
    environment:
      - PORT=5001
      - MONGO_URL=mongodb://ms-post-db:27017/ms_post_db
    ports:
      - "9001:5001"
    volumes:
      - ./ms-post/app:/code/app
    depends_on:
      - ms-post-db
    networks:
      - ms-net

  ms-user-db:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=ms_user_db
    ports:
      - "10000:27017"
    volumes:
      - ms-user-db-volume:/data/db
    networks:
      - ms-net

  ms-post-db:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=ms_post_db
    ports:
      - "10001:27017"
    volumes:
      - ms-post-db-volume:/data/db
    networks:
      - ms-net
      
  ms-frontend:
    build: ms-frontend
    ports:
      - "8080:8080"
    networks:
      - ms-net

  
  # 
  # KONG
  # 

volumes:
  ms-user-db-volume:
  ms-post-db-volume:

networks:
  ms-net: