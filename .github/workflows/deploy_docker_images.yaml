name: Build and Push Docker images

on:
  push:
    tags:
       - '*'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check if tag is on main branch
        id: check-main
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${GITHUB_REF})
          MAIN_COMMIT=$(git rev-parse docker-images-testing)
          echo "IS_MAIN=$(if [ "$TAG_COMMIT" == "$MAIN_COMMIT" ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: env.IS_MAIN == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: env.IS_MAIN == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Determine the version
        if: env.IS_MAIN == 'true'
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV

      - name: Read services from config
        if: env.IS_MAIN == 'true'
        run: |
          SERVICES=$(cat support/services.conf | tr '\r\n' ' ')
          echo "SERVICES=$SERVICES" >> $GITHUB_ENV
          echo $SERVICES

      - name: Build and push Docker images
        if: env.IS_MAIN == 'true'
        run: |
          for SERVICE in $SERVICES; do
            echo "Building and pushing Docker image for $SERVICE"
            VERSIONED_IMAGE_NAME="${{ env.DOCKERHUB_USERNAME }}/ase-social-network_$SERVICE:${{ env.VERSION }}"
            LATEST_IMAGE_NAME="${{ env.DOCKERHUB_USERNAME }}/ase-social-network_$SERVICE:latest"
            
            docker buildx build "$SERVICE" -f "$SERVICE/Dockerfile.build" --push --tag "$VERSIONED_IMAGE_NAME" --tag "$LATEST_IMAGE_NAME"
          done