# ------------------------------------------------------------------------------
# This is an example file to get you started with using
# declarative configuration in Kong.
# ------------------------------------------------------------------------------

# Metadata fields start with an underscore (_)
# Fields that do not start with an underscore represent Kong entities and attributes

# _format_version is mandatory,
# it specifies the minimum version of Kong that supports the format

_format_version: "2.1"

# _transform is optional, defaulting to true.
# It specifies whether schema transformations should be applied when importing this file
# as a rule of thumb, leave this setting to true if you are importing credentials
# with plain passwords, which need to be encrypted/hashed before storing on the database.
# On the other hand, if you are reimporting a database with passwords already encrypted/hashed,
# set it to false.

_transform: true

# A kong config file has an associated workspace. By default,
# "default" workspace is used but can be changed via the metadata
# field _workspace

# _workspace: workspace-foo

# Custom annotations can be added via _comment and _ignore fields. The comments
# must be strings, and the ignored fields must be an array, carrying any type as
# values.  _comment and _ignore fields can appear at the top level of the file 
# and at the top level of any entity.

_comment: This is a top level comment, and must be a string
_ignore:
- This array entry will be ignored
- as well as this one

# Each Kong entity (core entity or custom entity introduced by a plugin)
# can be listed in the top-level as an array of objects:

# services:
# - name: post-service
#   url: http://ms-post:5001
#   routes:
#   - name: post-route
#     paths:
#     - /posts

# - name: user-service
#   url: http://ms-user:5000
#   routes:
#   - name: user-route
#     paths:
#     - /users


  # plugins:
  #   - name: jwt
  #     config:
  #       claims_to_verify:
  #         - exp
  # plugins:
  # - name: key-auth
# - name: another-service
  # url: https://example.org

# routes:
# - name: post-routes
#   # Relationships can also be specified between top-level entities,
#   # either by name or by id
  # service: post-service
  # paths: ['/posts']

# consumers:
# - username: example-user
#   # Custom entities from plugin can also be specified
#   # If they specify a foreign-key relationshp, they can also be nested
#   keyauth_credentials:
#   - key: my-key
#   plugins:
#   - name: rate-limiting
#     _comment: "these are default rate-limits for user example-user"
#     config:
#       policy: local
#       second: 5
#       hour: 10000

# When an entity has multiple foreign-key relationships
# (e.g. a plugin matching on both consumer and service)
# it must be specified as a top-level entity, and not through
# nesting.

# plugins:
# - name: rate-limiting
#   consumer: example-user
#   service: another-service
#   _comment: "example-user is extra limited when using another-service"
#   config:
#     hour: 2
#   # tags are for your organization only and have no meaning for Kong:
#   tags:
#   - extra_limits
#   - my_tag
# - name: frontend-service
#   url: http://ms-frontend:8080
#   tags:
#   routes:
#   - name: frontend-route
#     paths:
#     - /
# plugins:
# - name: jwt
#   service: ms-service
#   enabled: true
#   config:
#     key_claim_name: kid
#     claims_to_verify:
#     - exp


# consumers:
# - username: your-consumer
#   jwt_secrets:
#     - key: "your_key"
#       secret: "your_secret_key"

# _format_version: "2.1"

services:
- name: post-service
  url: http://ms-post:5001
  routes:
  - name: post-route
    paths:
    - /posts
- name: user-service
  url: http://ms-user:5000
  routes:
  - name: user-route
    paths:
    - /users
- name: frontend-service
  url: http://ms-frontend:8080
  tags:
  routes:
  - name: frontend-route
    paths:
    - /
plugins:
- name: jwt
  service: post-service
  enabled: true
  config:
    key_claim_name: kid
    claims_to_verify:
    - exp
consumers:
- username: login_server_issuer
  jwt_secrets:
    - key: "ooNKWeo0vijweijrKn234123J93c0qkD"
      secret: "H8WBDhQlcfjoFmIiYymmkRm1y0A2c5WU"