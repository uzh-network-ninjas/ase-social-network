{
	"info": {
		"_postman_id": "a5c38b58-9457-434b-924c-ae2ad05e09a4",
		"name": "ASE - social network",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33518942",
		"_collection_link": "https://warped-crater-963207.postman.co/workspace/network-ninjas~73829257-a871-475a-a5e2-217000946d40/collection/20317814-a5c38b58-9457-434b-924c-ae2ad05e09a4?action=share&source=collection_link&creator=33518942"
	},
	"item": [
		{
			"name": "Authentification",
			"item": [
				{
					"name": "register u1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Decode JWT token\r",
									"function parseJwt(token) {\r",
									"    var base64Url = token.split('.')[1];\r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r",
									"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r",
									"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r",
									"    }).join(''));\r",
									"\r",
									"    return JSON.parse(jsonPayload);\r",
									"}\r",
									"\r",
									"var token = pm.response.json().access_token\r",
									"pm.collectionVariables.set(\"TOKEN U1\", token)\r",
									"pm.collectionVariables.set(\"ID U1\", parseJwt(token).sub)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"email\": \"user1@uzh.ch\",\r\n    \"password\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/user",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "register u1",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user1\",\r\n    \"email\": \"user1@uzh.ch\",\r\n    \"password\": \"user\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/{{auth_base_url}}/user",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"{{auth_base_url}}",
										"user"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "36"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "date",
									"value": "Wed, 17 Apr 2024 08:28:11 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "9"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "1"
								},
								{
									"key": "Via",
									"value": "kong/3.6.0"
								},
								{
									"key": "X-Kong-Request-Id",
									"value": "a799b07fc3fef7356dab91095cbc0508"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Username already exists\"\n}"
						},
						{
							"name": "register u1",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user1123\",\r\n    \"email\": \"user1123@uzh.ch\",\r\n    \"password\": \"user\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{endpoint}}/{{auth_base_url}}/user",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"{{auth_base_url}}",
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "275"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "date",
									"value": "Wed, 17 Apr 2024 08:43:05 GMT"
								},
								{
									"key": "server",
									"value": "uvicorn"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "1091"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "0"
								},
								{
									"key": "Via",
									"value": "kong/3.6.0"
								},
								{
									"key": "X-Kong-Request-Id",
									"value": "db22493a42451a4845b3ab180ed3d464"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6Im9vTktXZW8wdmlqd2VpanJLbjIzNDEyM0o5M2MwcWtEIiwidHlwIjoiSldUIn0.eyJzdWIiOiI2NjFmOGI5YTJkYjNlM2YzNDJjMjVkYmIiLCJ1c2VybmFtZSI6InVzZXIxMTIzIiwiZXhwIjoxNzEzNTIzMzg3fQ.3ySNZaPfuBy180d3d8vnjjjJSNaEykadEEIQBSwVeis\",\n    \"token_type\": \"bearer\"\n}"
						}
					]
				},
				{
					"name": "login u1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Decode JWT token\r",
									"function parseJwt(token) {\r",
									"    var base64Url = token.split('.')[1];\r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r",
									"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r",
									"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r",
									"    }).join(''));\r",
									"\r",
									"    return JSON.parse(jsonPayload);\r",
									"}\r",
									"\r",
									"var token = pm.response.json().access_token\r",
									"pm.collectionVariables.set(\"TOKEN U1\", token)\r",
									"pm.collectionVariables.set(\"ID U1\", parseJwt(token).sub)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/token",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "update password u1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN U1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"curr_password\": \"user\",\r\n    \"new_password\": \"newpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/password",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"password"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Service",
			"item": [
				{
					"name": "get user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U1}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/?username=user1",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update user profile",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"new-user1\",\r\n    \"email\": \"new-user1@uzh.ch\",\r\n    \"preferences\": [\"Fast Food\"],\r\n    \"restrictions\": [\"Vegan\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user profile picture",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1eeeb8c2-7e8c-48a0-9fa8-a5d72f0b3391"
								}
							]
						},
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/image",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user followings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U1}}/following",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U1}}",
								"following"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user followers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U1}}/followers",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U1}}",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "u1 follows u2",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/following/{{ID U2}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"following",
								"{{ID U2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "u1 unfollows u2",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/following/{{ID U2}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"following",
								"{{ID U2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "dietary criteria",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/dietary_criteria/",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"dietary_criteria",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Review Service",
			"item": [
				{
					"name": "create review r1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R1\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is a nice review!!!\",\r\n    \"rating\": 5,\r\n    \"location\": {\r\n        \"id\": \"00001\",\r\n        \"name\": \"testlocation\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 1,\r\n            \"y\": 1\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create review r2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R2\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is REVIEW 2\",\r\n    \"rating\": \"2\",\r\n    \"location\": {\r\n        \"id\": \"00002\",\r\n        \"name\": \"testlocation2\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 2,\r\n            \"y\": 2\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create review r3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R3\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is REVIEW 3\",\r\n    \"rating\": \"3\",\r\n    \"location\": {\r\n        \"id\": \"googleMapsLocationID\",\r\n        \"name\": \"testlocation3\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 3,\r\n            \"y\": 3\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "append review image",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "review_id",
									"value": "{{ID R1}}",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1eeeb8c2-7e8c-48a0-9fa8-a5d72f0b3391"
								}
							]
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/image",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "get review by id r1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R1}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get review by id r3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R3}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get feed u1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							],
							"query": [
								{
									"key": "timestamp_cursor",
									"value": "2024-04-03T18:04:45.607000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get reviews by user id u1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/users/?user_id={{ID U1}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"users",
								""
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{ID U1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get reviews by locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/locations/?location_id=00001&location_id=00002",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"locations",
								""
							],
							"query": [
								{
									"key": "location_id",
									"value": "00001"
								},
								{
									"key": "location_id",
									"value": "00002"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "like review r1",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R1}}/likes",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R1}}",
								"likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R1}}/likes",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R1}}",
								"likes"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authentication U2",
			"item": [
				{
					"name": "register u2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Decode JWT token\r",
									"function parseJwt(token) {\r",
									"    var base64Url = token.split('.')[1];\r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r",
									"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r",
									"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r",
									"    }).join(''));\r",
									"\r",
									"    return JSON.parse(jsonPayload);\r",
									"}\r",
									"\r",
									"var token = pm.response.json().access_token\r",
									"pm.collectionVariables.set(\"TOKEN U2\", token)\r",
									"pm.collectionVariables.set(\"ID U2\", parseJwt(token).sub)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user2\",\r\n    \"email\": \"user2@uzh.ch\",\r\n    \"password\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/user",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login u2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Decode JWT token\r",
									"function parseJwt(token) {\r",
									"    var base64Url = token.split('.')[1];\r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r",
									"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r",
									"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r",
									"    }).join(''));\r",
									"\r",
									"    return JSON.parse(jsonPayload);\r",
									"}\r",
									"\r",
									"var token = pm.response.json().access_token\r",
									"pm.collectionVariables.set(\"TOKEN U2\", token)\r",
									"pm.collectionVariables.set(\"ID U2\", parseJwt(token).sub)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user2\",\r\n    \"password\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/token",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Service U2",
			"item": [
				{
					"name": "get user u2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U2}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search user u2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/?username=user2",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "user2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get user followings u2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U2}}/following",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U2}}",
								"following"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user followers u2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/{{ID U2}}/followers",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"{{ID U2}}",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "u2 follows u1",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}/following/{{ID U1}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}",
								"following",
								"{{ID U1}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{TOKEN U2}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Review Service U2",
			"item": [
				{
					"name": "create review r1 U2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R1\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is ONE review\",\r\n    \"rating\": \"1\",\r\n    \"location\": {\r\n        \"id\": \"00001\",\r\n        \"name\": \"testlocation1\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 1,\r\n            \"y\": 1\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create review r2 U2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R2\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is review 2\",\r\n    \"rating\": \"2\",\r\n    \"location\": {\r\n        \"id\": \"00002\",\r\n        \"name\": \"testlocation2\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 2,\r\n            \"y\": 2\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create review r3 U2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ID R3\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"This is a REVIEW\",\r\n    \"rating\": \"4\",\r\n    \"location\": {\r\n        \"id\": \"12345\",\r\n        \"name\": \"testlocation3\",\r\n        \"type\": \"testType\",\r\n        \"coordinates\": {\r\n            \"x\": 3,\r\n            \"y\": 3\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get review by id r1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R1}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get feed u2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}"
							],
							"query": [
								{
									"key": "timestamp_cursor",
									"value": "2024-04-06T16:06:59.390000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get reviews by user id U2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/users/?user_id={{ID U2}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"users",
								""
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{ID U2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get reviews by locations U2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/locations/",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"locations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "like review r1",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/{{review_base_url}}/{{ID R1}}/likes",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{review_base_url}}",
								"{{ID R1}}",
								"likes"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{TOKEN U2}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Custom Tests - Adam",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Decode JWT token\r",
									"function parseJwt(token) {\r",
									"    var base64Url = token.split('.')[1];\r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r",
									"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r",
									"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r",
									"    }).join(''));\r",
									"\r",
									"    return JSON.parse(jsonPayload);\r",
									"}\r",
									"\r",
									"var token = pm.response.json().access_token\r",
									"pm.collectionVariables.set(\"TOKEN U1\", token)\r",
									"pm.collectionVariables.set(\"ID U1\", parseJwt(token).sub)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{auth_base_url}}/token",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{auth_base_url}}",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user profile Copy",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"email\": \"user1@uzh.ch\",\r\n    \"preferences\": [\"Fast Food\", \"Coconuts, Hazelnuts\"],\r\n    \"restrictions\": [\"Vegan\", \"Walnuts\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/{{user_base_url}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"{{user_base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test exception",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9002/test-exception",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9002",
							"path": [
								"test-exception"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN U1}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_base_url",
			"value": "authenticator",
			"type": "string"
		},
		{
			"key": "user_base_url",
			"value": "users",
			"type": "string"
		},
		{
			"key": "review_base_url",
			"value": "reviews",
			"type": "string"
		},
		{
			"key": "endpoint",
			"value": "localhost:8000",
			"type": "string"
		},
		{
			"key": "TOKEN U1",
			"value": "",
			"type": "string"
		},
		{
			"key": "TOKEN U2",
			"value": ""
		},
		{
			"key": "ID U1",
			"value": ""
		},
		{
			"key": "ID U2",
			"value": ""
		},
		{
			"key": "ID R1",
			"value": "",
			"type": "string"
		},
		{
			"key": "ID R2",
			"value": "",
			"type": "string"
		},
		{
			"key": "ID R3",
			"value": "",
			"type": "string"
		}
	]
}